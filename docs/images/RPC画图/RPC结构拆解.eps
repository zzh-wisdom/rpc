%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 742.000000 321.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 742 321
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 742 321
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Baskerville
%!FontType1-1.0: Baskerville 1.0000.1.0000
14 dict begin
/FontName /Baskerville def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /C put
dup 34 /a put
dup 35 /l put
dup 36 /e put
dup 37 /r put
dup 38 /R put
dup 39 /p put
dup 40 /c put
dup 41 /i put
dup 42 /n put
dup 43 /t put
dup 44 /P put
dup 45 /o put
dup 46 /x put
dup 47 /y put
dup 48 /I put
dup 49 /v put
dup 50 /k put
dup 51 /m put
dup 52 /A put
dup 53 /S put
dup 54 /s put
dup 55 /h put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1036 1 index div -705 2 index div 3616 3 index div 1968 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 25 dict dup begin
/.notdef 0 def
/A 1 def
/C 2 def
/I 3 def
/P 4 def
/R 5 def
/S 6 def
/a 7 def
/c 8 def
/e 9 def
/h 10 def
/i 11 def
/k 12 def
/l 13 def
/m 14 def
/n 15 def
/o 16 def
/p 17 def
/r 18 def
/s 19 def
/t 20 def
/v 21 def
/x 22 def
/y 23 def
/u10445_u1043B 24 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1036 -705 3616 1968} readonly def
/UniqueID 4054374 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E71D8511F70F35D5BEB501004272758AF554A91D91B5CB6BF284B4AB8F1ABF62CF9C68D9FA341A029868F73E51C1C97C82F3706022595692643B3CBDDEA890FB56D394A7E87A63E9E5780981AFC7A69FBB8348BE41BA9C93E455DA9A21955595338AC4DD0837E8058F9FFFE459091CF29D5C1CCCB6579551D1C946FBF54B7E21783747E3840B4F2D2022AF2795D28DE6868C9DDA9418D511558947DAFCABACAFC0C763EFD05410CBBF76585DFD6BBDF37C9D83D5191B2EE55A6A2917366A63401398851CCE6805D66CF81BA588B3A9C6BF7264F3C2B16E2376CBE2B413824899DC9B63A17BE1DFAAA3D2EEA51ACA4EB7CF229113FB8DB2C5C9A0137615107EF2A913FB445A5C16B51678DB957702FC0C069E9DA752DC77BA8601C7EBFCA45739A7CB8021668A08B0FCDFA278F1B86FFC3103C54D76B4A17DAC3F47FDD2B71E05ECFE7212744AA8C167288D42ACF80E936EBD7177B799B5D33C89E71FB3386BE02F50171BBA04FFCA785E8DD1FA6DEFAC597A34C4877635FF7B4BD141A5FB297ED722B9F1DB4B23A58D3710832B7BFCB4D171D0C86B8090BC931803EED3AC7BAED4D6DD393D2DE3DED149D706C8B106D57AF58462ECF6662766DEC882EDB639E720DE73F9BDCF8FA20CBA3B204F9BFB29A10BE3FAB31628199245E16F22C38B57EA9F20FE5640034C2B2EB54921666F2C687B90F98234BD03CD43FB8F54AE00977DFB6C0FD2A70036133211310E9ED384558085FE7EF3488AE9AB4CE755E92D49888DE7
F615BA3EA458F19B7A25BA4CED88A14EAC11ADCA96ACCD08FFD847F3402EC55BEA634585F2573D9B896889715F7FD432405D712BFDA3B34B5596DFF1761AF10355C6A3C14544980C7401A6561E05F07B4012F879977201A5C4D16B14530AB8718D5793737154921E90997B767DD639168762EDA0D727402C8CD4E825CA5B763146AAD0C208D807FCCFDFD87DB4FB919E5BE3784FAADABAD80FDBF4A0ECFA2DD2E88B57643ECE5B251FFCBB1662F3E16861AC726E8D89F89DF950C6A246A43EB6F0AA9F34D8DCD41BB8AA40BD9C451CB057997CD291DB7F46BF0B0654F8C674CA44E1ACC3FD89C3764DFFB9961ADCEA742C8CE1245676AFE4298D8947C9D6C0E4EDCEBEDC7502EEF66A97CF8284B3047E47F6A8781EF76BCC30EF37B24761D73BE0EF7E2529FE24391EC3531744B39A59EF9E722E10DA57EADBA85D54BF33EB2C9D22D3C3FA6057406965E91AE03BD59E6F2FB10310A478348E1F3E6F1199689E72A09562EC74973C2462BA3CA653611682092A73B5FB0800F7E03C1BBB43B92CA106CDAC353872A6E6199B33BEC5CAC9A6E5DE120E2BD0D7C0842AA0F4FAF24DB44719B30A7ECBAB342F511439BB3AEF54EE10F25FEE27DBA0A9A54C710AEEAFA05CC17B3A82EDB5EF4E2D61609CC5327D2B7B5D60BBF92B6968452FE653C35299E391618C74B0F7D4EDAC0A69BF7B22A28F8AD26405BA896356EC5CC0EF0A356E5BEFBAB8860FA3A79C45276E34CF687ADA8AF139DD4009B96F512A94F0E529E019AE3D4BFD4ADE6D3232DAE0D61E43030497D2D642D88EF09D86F7EB5141D51F77FB4943D22B83324D0FE15EBC0214973EADA3E553CEC456CF3E54AE0D5C9CE28178F7451608EAB4ADEE5A3FD96A411D19895BF4A500162EA005EDBE59CFFD11409079F6C4CEE161384EEF5CCBFCB22A4EAFBC94F8C490401920361460F052CDF410FD75958746412369628498C9BE7E029CF05A8134813DC01A99868AC741D610669F5F00BEC959F3095CCA9921076431A136A20A38AB72C4024FF28CDEF17FA02707734CDF4B8CC253A4124619947352FAFD14A1A316AAAC15A912AFFE17F0324F8519494A57951A1A60E45CA08C0FD0011719464DF28CE06324E4BF4065B8F70158B3E09FB2DAFE10B6E2142017D3C3BE7C3153E1733928F691F6724D34205ECC6260A90755F1F2465DBC8828ADE0D0A22D37105D43653540795E84456F212B805277A9DF293430D7771FCB65D6EFDDCB049FF521BE0363A3174D7C551FFCCF1C95F3795C8329D27234E2C5683C68F300771643B85A3D6D3A0BDADAB5F885E40A295BAEF5DB453C012ADCEC648E3BE5362DDA21A5C06F007567C2772654E2C11CB8BDC362467BC68B6D6E75B897E6DBB47908BBC7C24B02509F729B017A230FDFBD336E758F1B45D173831D5F4C4A760304822DFA363A38795548292936
7D59D6A068BE18B4F2FD6631743D71F651BA74DC17E5007BBA587543EB4A1E92886CC655ADC11F9DCAAFCCA313CFFC1F624D07436B07A645FBC2A2F3D82A634FC1164484FE9EE46E5FF058444F96F7DDA038994F12C49425D85352EDBE7E04F004828895DB2C24A94993F66EC58E30C45191ADCE6A505AB686A1AAFC79A3BC725F293F0A662919658A3A4E2ED1F846CB3B7E7FEFAE1DBD6B4A5A2BA01B0FF9BA34EF853271A60738650FFBE78B5E9D74D3573A7BE41B1D345F9A4C77EA4995290C17EDCF86E7F52D8E54AECE4D9627E21DA39CBAB7519892891EE28500CB0119DB0C7D392E34EB59892FC8D7AA191C568F1FB56AE101ECCBE08AD4AC9EEF413FF120B9ECE4F31D8028AFC20612CBA5F06F80D6357618CFF7BB04B4F1D86AB2227AB23F07F8D0F06A5F86AE8D348567F05283CBBC2F8415EFA46D186F1F0FA1BE5E1EF583B4F86EDD3471BBC8E1386F6E17E3A82C169D07E304E7EFBBBA70759EDED55FCA4F66DF0B250F6DACA171CE477566564ED0B6CAFCB5CC17BAAE81395C7D5A2C7C2F2A9C93BE729C84F516041057D0AC2E91AF0A37801F574F21916808365017CD207A3814C291D897135D76D5BDCA9BEF8B5898F6D2F38486BBB2813895C05D733538EDC039C912F4BEF700811BCFC6558C03DE9F37D0DCD50B3BC374678D0F47E504DF8B8C4AF232F2DCE6610B3830FEAF0F45C3938F171619B1FFDFF2A8DB0EF0343C4E08C03677510DE118E14498A888D57573BC1F8A8EBAC2DE3A3FA6F13AA7C3B9E754F80500EA373F13E2B980EF12C9533ACC34C5280971B4D0CD31DC66FE1FA9BD6DA72F1E71714D7913DDAAF9AF24AD356F30110947DEF630BC56837FDC00EC25879C636184FA4E045AF598E2A56EB8E3C56B38469231F51C02B0F732EC093716326B977DC329031D6D0F6168B0C90C5D91181BEE4ECE0037489F077BA4274E051CAD3C58D8C158561ED32A00844481E90EF86B1E0701B10800718D62814E7B93C623BEB4CC9720ECC7BE3637DCA8E39D8197520F425ACB525EDE8149B3187BB4A896C5D8E5DD4087FCCCDAAE4AC5EF3A2F8A8856AFD9C89C57F112018BD5BC6FF4D87C3ECD272FFFD5734D412042936644A6541FCAB29F241E6972DDB8AC436E5E759B87D02F24697FD2F2E02CA169CD9108703B8222CD7850AC11C5A1F6A3CF938F622D02C9AB3A1857DC23CF3BC6D38D15AD3DF20429FE91CA4B24EA6F9ACF9BF9FC010BAD2C65A61FDFD760A7CDEA436074E44F46592862F32C32900EF4E60DFE706AEBE8802B25940AFDBFB2F237D3E688138A433595DC2D5944275F29DD609835D1F4182BCB1A3CA351F5A1B1DD737390010FE6122D8724519DF84BBF46DCD0ED6353D7EA46D88C0A386B676470160A9A6F13EF2A59898C434F3B1CAD2733CCB7C0C79FFB92F3EABA28E48B16A9BD8D0281806E645E
2BFD9223C2710A74D77B94E79A0306CAF969B8C60F006D69F76B8794C3E750B06C6E68045D26AEC5824B72C63E0D4B0624EF0D51EAF4702405A966C0ADBB8126A12823600A4514A403B5B3ACDF4CC8A4A736AC15FE54CA8BA709030E07309B8CAFC5608660ADD9C68AA83D7366EC7D402DFD6679D8FEED7E374033F745E0E3C3B692FC3B361B2F9756DFC9A3B7CAC86A946F7498F5299C88DE17F67DB90E5E444208C8C3E69ADDFC91574966652DA697165C1CAB31AA96769FE6E711182402E87B9A9674B0F855E6F691A51713FFABDA613C7ABD2CB9A7302279AD3536CDE7675A2D20D31D7FC722122ADC66635FD9698CC88B0F3D61031D072E9DC36EDCD221F70AE8EB20EDDCBFD6E65663356C092DC6D4C4A360D9F64FEB3DAED2EA2A8FC922A7F6B1B9EAD9B3F098CDDA84245E63C87AFC48F3953A777D1CC62F420A961032B0790DF48D4BEC29CE67D3BAC64BD030E2B7A2162149DCE7593A51802929A5B7FF4EE9114827D94943DBDD5F88FF09DCA7A168A6651D71B1DFF547B4C7E14771719E7845161611400DB74F2C4EC60838526550F565C4E1C852CD619AA715C3B6A8F078C10550404105D84CDECD847BB9189D763E7E977F50409C8026DC27F6C599B5455A98D7D7949B6DDD5932F3F01E791FC23AD927EFDF74B81DE5CDF42A0CC73D2484ABB4E816B52F67EE86A4CB6023B9834D02448C0800C18F08BA588AFFFA5B290157825D4FC5AA4AE3885D49CE6BF8BBD2E01E547BC3232ECACC832DFC5859594B6C5F7BA55D67823789053BF22DFB22E81D7133B0CBAA9B3192374EA189E23064CE1478B18DE8E4649EA0EE3269D659B3FE59E71DAF8BF1EDDC6B0D3E0D28247E866E6935479340576895A8D8EEB941133D932667DBDAFC02AEEEA724BAD23BBD0B8D875B3C75E9637977791DE18F36FC63290373C763D02B1804C820A20B081E9205C83E13BC1104B151DB115194BF892D4174522979C4EC8BC37A64FEEED54A89C38C304970FA9B4CA034FA9978ACC2707987C10AC9A6B3BC5CF70423996655BD850004437B93BDB6E1946A1BDB18B428A6B1E3E0AAF789B360CFD4239B0BB434C6A9B4A44D4AD9321FD6ABBAEBD30BD11AC3EE122D3EA2E55203432A58CAED24E4403F29E3BCCFCC5D330F8A892A10567E5ADC40D4D6F91012AFE6D7FC3821E7DED88402EFE02EC366DEE589588285D7FC07DCC7DCBC7D66DA4D87D9A3009107F41C3932EE8AE7984BD5727166E9144EBA8B92B246312EFC6F8CE07514A276942A32FE5BF6D6EB681AD77A972AFD9D2FE627014203B86CA97782869EBE442D87C181B9D634132524D15B5CC43651941E0B335A324EC8767BACFD8E2123227B17CA3E6E3432962E847D52A9A0B0898E2499C3C7AB100AFBACD7F411C650261D85118FE5587BC1D3C06A01FFAE0C036A99674203C5F1789B7B3302
78A12962ADAE1B192B7CCE254E98656451DC68FA83913277A2568CCB0483774DB5E45B57724C7CB5780A10219FE6394756710E557403F5C5A1471CA97317EFD26A3BFCA74A66F0135EE750872A91CFBB4EC69F5434C2246F943F66140E717D229B06FAC2B6A4555F624A7E7D58DF7117D74E42330AB298C90CDCB000ABD603A1142DB542FAAEFE9AE4F283BFF22F66BAB74B2155A9A633DD4E198B7498E29DB4EE8CBB8AFEE30B38812FD634AD35FF12CD5586F7A2DEFD782AF019E7F26061EBE3EB79A6231CCD1733F68741D934C2D9726D33926996FBC19BA020AAA8B1D85C98025AE20B1320B82AB5D81F8E9841D120567233F739F128C28A0D5DB3646D9C889BE8FCCF5BC425FD3C137B7138250DA6D77305686D79ECBE08A1046DCE04D00D359EAC8D82AAE8E36342562CE367B17D20FE19E5DBF28FB249D35B68A257E75E17DC4FD55B702CD72D7703E2B3A356282C41792ADE8773FA440B56F5E6863CAD0499417719E607F0E6EC94B2B2A617CDB13E1CBFD4D85E8C3EDAAC9A09A87673BF5EA53474C283B6F3A858E7BDCB6ED1529C32BFBBE9E1E7F60E7B2DDE5087EDAEB7702927A30BF51C80ECD81943CB405CB4126AAEB4747F0FEB9C81D3A413BCE1A96095F0189779C8C1918E1E9E84092C7AE1C1E483C004F461B5E248F0EA153499260952D3DB8C8232AA228B405EE23609336F588C17EE6E5B8CBCC70A6749DFAAA8D2B37E4893256E598266B15D9B44830E2EC94A48BD435DAC776757E015555BE9A7C4F0EB1E2DD2D43C8B7CDA9E9F275ACB9BE05717B357848B35CAFA1BBC50D3BD0899857A5AE04C7FA2DBA7E73768A4B1B154E0A98412DDD130241048E741B08B9ADF8A59803A6649F407A73C27A40595CE5670D10820EFEB6AA0F0BF73B159F0A7FE6C83E6A29D478DD0200EB82F8DEB03332C8FC9DD9137D9485642EEBFC8E3C638BCFE4BCDE35FCE2F31454611DCF98E92648A347DBE909A9585F660DDBEE5BC65E60961D2A32180EFCC4445DEA561AD4A8A286169A17AF7776AA0A606477D482DF12BD6AFC5A62097F6DD44B25B675EEAF827A5859A1B69D666B6AA0217652AA62FB84028DD8DA9A76E89248A1870BACE1CD3069E8C5CD4B940B8ED6DF98A5868BDF0F1840BF3BA4963A03EF45AA561088FBEDFE92362A471F085EF0D87E9A54D910070F8E9DD67629AA7ACC008A3BF2650BF100856964385D8EB6DD218BDE67F9F747111C7A387853824CB598EBA6B6B9ADE1A3C134A480F760611EA949F30F0CAACFD060356B9A30EA1C21FF5391321D998DA07C92A1F5E658D3591B82D9F1442FE315DCD4E2D381B1859B0F50E79B644A4D5EF8FAB39F97A9285DBDA85E95CD956454234AAAE655B05B07101E9845E19CCB16166CE3614DC83C45401460CA97048CCBCB677D1F159D5EAC95AC000AE3EA09251848EFD1C2A
8CC8F86AFE94E5F2EEEEA21D7601434A4665E61D3B2210FCDC291B785C6442B5A4F0ECDB6054A558B498D4473595FD765A498ACBE086EE2FE22ED06D6B4EEFC185E7ADF306FECE3DEC0D65E0324154A76771729586159CEC2FAD829E67F5A50833102099554839C7D850611F701FDF863208768BFDBB1147A9447E84EAE82AE8EA0884737E23F88A1963AD65F9E5892390BE8C333D58FAA02ACFBBBF6A5BEF317D38E63BDDE08E185033E60DC84A6DE1E2EA7F71E9C1C9441191F371B9CE836AD6120CFD17ACE7CEAC46186285A03647BF2E36663B2807382A369D0C302297D3647766AA58E719A30FD0E522567B2BFB2EA10A383DF4A1459FFD4C990315073E819B1265996F8AAF21845D044D525C74785CDA66B1043ADCC1D04F563BC0DC358549825BFA9D66AA48EE3A2CDD6799DC7E4E7CCC694A8C4648F2A10375CC7037D093DCD3DF2F15AE06F36C6B0195BB8CD38703A88C3AA2D077BD85B694D022CCE55E6DC32BF4DA4E3C7B43286BCBDEF4EB9CF88DE90EC617EA424A0F55395196AB4CECA4F8D339CDC555601E051AE8C1541954D13ABA3A9C79A8D881B403131F451F29DDD1976C6E8961CBD7CFA65A2AD833A04D522DA4ED9CD885E4773E1B38451108007ACA6DE31B1065A975290AB0A9EFEF1460EED3FA06B5CB8B7916AB448D8712BBD8DA120F57C5A6D391046EB72BE9854371B9A8EA64CAEEC5C1470641DA7C261A68624DC9CDD0BA69D79781FBBE495A6BE4E78617E9F5D72C461B9C6971FE11A4862BCCE80FDC6DE34BAA2209054981626DAE758585EA631477ACED4F87BE66D7E39C50F4ADF836381B38FA30190737711CA3E0B4854EF1CFF4EA8DA1ADFF0FF00BF8083F4A0B6C42BA454D27D9B2462F399B65EF25B688CDCC2E9A281A2C1FD1E35F1C11F8256974023BC2015D4A6FB4CEA9622F2E7D313648EBA4B7FD2338B12D89B87CA3971194A104051E76DB4DB5A3AD8614E679D83320D2AFDC859A22B87E6DFE415E9F23A987483B2210B507647D921DC66AA21DB6453D0D90E51ADF56A3759B7E647403C36B400974496572363F11B5F55B6A4DA60B9818177A73AC89A0A7CA762580DC33E3203EE9428C4C55D05E7105AF51CEE060D55466D2D34ED2B59A2C0F83EEC24BE1B1D3FA2FED0371974A77958D3F9C0944D3F78FC86710E47F4DD21A116D0653EB5DFFB2390F61D9CD3C8F7DB3B9D4F2833BD83DA0804B029FD1A15A41BD19176F3539F909441DD0F66331EBF592CB4C9FF3949FEDD942E3EE97903DDFAE701C6C84B6AB92BA382A7C9047A75B26EAEA5E6C8482434B51D1A5AFFF1E23111E8422AC6A3294A50E885E09EDB27E47F8BA70D77DEC7EAEB8A6ECEAE548D1BC4F4A842A74D0F85A103B425EB07720AACC116ADB2A8F69CB6B3558DF5F5054A46211AF609FA888E8D16E081E47DDBE2094BC58BB2601
DA4802E2D1BA6EE92EFF9DC64B83EAA8F3A09ED306F27BE5A5F05A9BC190E6245941A47CB3AA34724725DBFCC4546B7F6C0F364A6515FC99198FC63F77EF8064E4DC427DA233505B2305EC1D88F7F6C169C9AC5ECC74C5DAB6BFD5E68C27BDB1FEA70F1A1F921875D85915E823D278F3DD6B877151DEE01BAA7A479D3585E42F154001EAA59BADE29C89B24E9DE1EB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Baskerville cguidfix
/F1.1/Baskerville renmfont
%RBIBeginFontSubset: STSongti-SC-Regular
%!FontType1-1.0: STSongti-SC-Regular 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin
/FontName /STSongti-SC-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /gid76 put
dup 34 /gid80 put
dup 35 /gid83 put
dup 36 /gid85 put
dup 37 /gid82 put
dup 38 /gid87 put
dup 39 /gid70 put
dup 40 /gid68 put
dup 41 /gid79 put
dup 42 /gid72 put
dup 43 /gid81 put
dup 44 /gid71 put
dup 45 /gid91 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -132 1 index div -787 2 index div 1015 3 index div 936 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 15 dict dup begin
/.notdef 0 def
/gid68 1 def
/gid70 2 def
/gid71 3 def
/gid72 4 def
/gid76 5 def
/gid79 6 def
/gid80 7 def
/gid81 8 def
/gid82 9 def
/gid83 10 def
/gid85 11 def
/gid87 12 def
/gid91 13 def
/gid42949 14 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-132 -787 1015 936} readonly def
/UniqueID 4455122 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2829599C1DB40C921169FF26E104FB48CECC24574A8196DC855B668A6515558146EC89D2D9218D3228A0E1A76FFD1EADCFB69C33FD3ADDC8885BA11315FB64DEDA915C22CEF6B2DB733B047D5B76B775CD4FE578D2A0052DE1ECB1639E1868D7B09C2502E442830F6E338767E028F3C3EB4770095CF03BEC3DA497A33B159D01A9A5A65990123A724EEF43BA505EE50430022D76F4DA9B77E1C27D3F601AE09AA5D322B88C8A1AF153C2623491D6AF64DE52810F522CEC489E26801B64BADAE5D339AE38CA060EA56F1281F789FCDFADF88BD11428429284E6ECA0EFB5973A02D2CFED338ADD990143854159E7C5D974BB0CDCB6EB279949A4375461A910466416298D94495EC58760B3E9B88BC95C422539350B067FD75A9E1C5F64282EA33CFF6254AC2BE5F7D48090BDF4F89668F93E0AED5A8A41A160522C74554996C9847B56A3C88EE5CEDB6F47E3F67E2638D5F3278481206AF22E2A0DB674ED0A429A8A134286288069EF8F6AEFBBC6D07788985ED36D58F926040DBB0044707FF53EE7408DE42E56F05400120EF1AD9E731D96DDC461319AAA8164200128F53BC4BD673DD828C75B5B1D37BA15FC0EF09470A38FB5A1D515D24CEE57CB02F11AF7FDAD2BA86666E16E1C6FF707F756A74FFE3DD45A82DAE928E7D8696AC049E9DA13F16B9810C25DC53F6D5E10373AFF38F53434329BEFF991F18FD5AF917C11309051819655305C1B15547B7E6A032DF5160A5BB84DA413A7BAD8EEDE1A62A0F68E3AEDDD7A2
C4A763B292F4E31D79FC7755584831515ED350A02D111F9B74AD472C434A31433DE1B5D97D3CC8A7FD299277D69DE3E3AA483C2D0E079B7E25EE10C3B7AB1247EF3CFD5F7F4C4BAA815606E8C1C43B50A28CF45C97F6CDFD8504CC1ED02DFAD70C15D6AB32E9A27795F9B3D89658C71A0B23A02BCE990F952A278874BDDA196D114075881F4043F6F03B7A67E136033DFA0B55D477E906C16AE2F5197150E7685B2758D2DDF2BD8988B990DB8B317C711D8CBBCDEBC9228A2D69444C497E6B79A28E2B27D382CDE03A5BE9D15C5A90A03AED3233E04463A29465A698230B55F7B14A39A7484F9ACCD54CDFFFDC31531747546F2EA02F13F82CC3A053141B3A749B076BCCEF4BC1E5A6FACB68180E45AECFC39E69B3055660902B3B63E98E6EA2752A538F940DE268A1EF719E5A39B49BE1D22D374486541AB91C588D2F5FEFB488903DA4C59B8D9D1A933B2C9595C8A18F62758C893E2315D186221168DAEE1C3954973EEF17F014D19FDEB7A4A2953326179FB6ED7124300453D99E19C2A61E6C943DE8EE379906E2CA273BB4811F247C57125511D2A6019DB1F048FDD2C5A49C5A6550E3BCC4D2CBB861B7EC21C0D10D0045FCD1518C491213D2B23E73A552F39C1D32A2DB959E0BE0904676B5309674B293F3E1D565C0FCEBCCD06C213AB895924B512DBAB2ED0F28B63A207C555BCACC6567424231A544FE0981DB66C027C0CF9B0CAFB20BB47CA7687867FFBEF81DF9ED92A68A5C6C35C92C3089A5986E9EB191BAB6F8A0640FC188A8E30F4622BCBCCF9DD7826E061EA760785AC319CE6FA1C2C578EEB5548DE1E2A6CC0AA9E79A8D5BD99B7AD929B559BFAE5953AC53C836475DEACEE89477F15DB2A284F0B349FE88EC1ECC4057539780F83CEA4B42BDF3B87A3EA73BCC91021564E20DFE0EF4D541780475318C498015F5067A3AC68834168F8B0746EA9B21E53742F82FE78D39189BBEA7C71ECC4A0DAC889F944AFB172BE6EDCC710400AF625C9BCE5148FDEEABB391EDD39F935B8AFAB84FA57152EE8205BA1317B9E8E7663E75D116C02009DE7322EE9C3B7E13EC58AF6028B0198BB47FBE3468E3DCF8CD2ED493D00A845E6A3F77E9E518780D36DAF79D7AE2DDF64064679953B77A5FACD226910B25D3DE627E59954CA4EE67889D8D062D7284E0966E1041714115764D8D844552A5196202F81234CC5BF05A4721FE1F4ACD42143941EF9F317D47C60BDA76BF9E98AC51702C2690768B99A11A87C48298EE22DF3AC973C53CFA6E579C8F7EB01FD8F00CE4F21C280CA5AA0A575618C93794733F55922A543DF89F8BE90331A80D8E03EC01053815CD6EFD9CBBFDB1B2503696AA89B59FB0F56B15DB6A47BDA91598A725CA3E1F649EBCAC96C4B377B239957B2DE3B48215B88CB5D017A8C5B8F0C080B2ADCCA258210005CD03FF0E94400E

39C4091E1143C5CC892AF4BF86197955BF857C5D964DB243D8F6DE405A33253086A8693B8E44C94162E20F83FA3B996C3297723B85C482C6E1DCDCDDE4661E2D5698EF6E81AD1AC1EDD2BE2ADFC32C65F3C7083A2ED3C6BD7CDEFC9AF1D7E532BF2E01CCA7346EA48C69A70727BB209D2E11F240A3386F6CE79CE00A8D61002221D2F301D9FCBBD3853DF7CC09974FC9C48E798067964FE38DB6430AC8909471B74D934D4C22FAE9CFE9411BC72867D3654498D187A753917E02A5B75D07CF6D0BE775074DD555FCDB92E637D549C0D8AAA890AFE0607717D9562EF1356396ED6A67936C1AEFD63897622F7DC6B37CE80841AE2AF7DC5852C8ABF82D4EC4D3402DE5F9FF38DEACB54720C40A48930B5369ACAE2C01FD92F0C573232BDF142CC65A2BEFF5826297FA17BB9D26C7CC080EC75AC5FE7DDD5B3CEF61555CE373B3283008E8C95AFA9DAD22D17841FD1B49D047B06B396DF7D4FDD86606C01936E363E4C88A82C5C26BB25EC8F0E17AD78C5E1624239CE832DDDA82DA44A226B0C598554A4C2230D88D4CAEC8989965C09553523EBB9ACAB9B583011868A6335C5B2E7A02D2A3E427039CCAEAE61F9F8EE0DC5B4EEDD907F7980E00931C30CB08DB7284FE942C67BC943D8A65ADBE0CEF4536A698B57D215D78B21FB82CAE3E75B154B3DAD0DED251FBB88654D5AFBA2D196DF6B85F1E4A1E2245FC687C4FC1D0A665C89A5591435C1069EE97C1EA25FBF2D18EEDBC58FFF096E494523DB5EA8A94035E2938D4F31FD24EE4054DBF041B926D425816FE8A7EF2FFE73DD0F60D9F8E108439EBE5ADDCDA6CDB2F620E27B324EB1C061DE43A16D8DC723E869392FD2A39CC98DF105E50AC84EE864FD4D99CF12B67452D96D9AD4D8A66DA9850FB5397AFC65E9B26EF76E369E000F5E0ECF00BB300CEDF36447271C4D4CEAC19A9A095FF7460DFF923C76195D800618E043786B980A592E42CCE9EF0BE8DFDE889687D84C6CA6083028F714AFCB8CB5F2CE8C240B2BAD82CA2E55496E6B60BAB055097377FB0C90DFD30118CD060EA57F18CF3741879F7975657DFAAFA63C160834C3E0A7457ED891096896EC66DA060581576162876BCF588CE8324278419C7F6A74101A1BAEFA5AEE5F613617BC014A43B697DE7FA6010A830AC830C468352CABC9B8FC4BE9A870AF288AFA10485F7AF2D76F88977C3437C65490C70D15BEBD0ACFF8C9C9111842D0416FB4765A252CB966283E0BCCAC76FFA2BD2BE277DF9A59F467EF67C5146BAAC1E4BC4AFA46D582F7ACDA043A63CC1056BF63768668AD258F89A9B886B29CE17803BEB5270B995CC76779DB896A7188A2E2CEB7D99278AF4027B961020C3A4A16FD8E764953AA003CA0213BB39515C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/STSongti-SC-Regular cguidfix
/F2.1/STSongti-SC-Regular renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 742 321 rc
0 321 m
742 321 l
742 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1061 1191 m
2106 1191 l
2106 -1370 l
-1061 -1370 l
h
-1061 1191 m
f
0.5 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -888 1052 cm
889 835.5 m
1214 835.5 l
1214 1051 l
889 1051 l
h
889 835.5 m
S
1304.7422 835.5 m
1629.7422 835.5 l
1629.7422 1051 l
1304.7422 1051 l
h
1304.7422 835.5 m
S
0 i
0.80000001 0.80000001 0.80000001 sc
CM
34.125 302.5 m
81.625 302.5 l
84.386421 302.5 86.625 300.26141 86.625 297.5 c
86.625 280 l
86.625 277.23859 84.386421 275 81.625 275 c
34.125 275 l
31.363577 275 29.125 277.23859 29.125 280 c
29.125 297.5 l
29.125 300.26141 31.363577 302.5 34.125 302.5 c
h
34.125 302.5 m
f
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -888 1052 cm
922.125 749.5 m
969.625 749.5 l
972.38641 749.5 974.625 751.73859 974.625 754.5 c
974.625 772 l
974.625 774.76141 972.38641 777 969.625 777 c
922.125 777 l
919.36359 777 917.125 774.76141 917.125 772 c
917.125 754.5 l
917.125 751.73859 919.36359 749.5 922.125 749.5 c
h
922.125 749.5 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
926.12109 768.25 m
(!"##$%)[ 11.500000 7.500000 3.835938 3.835938 7.000000 0.000000 ] xS
/Cs2 SC
0.75 0.75 1 sc
CM
23.875 202 m
91.875 202 l
94.636421 202 96.875 199.76143 96.875 197 c
96.875 179.5 l
96.875 176.73857 94.636421 174.5 91.875 174.5 c
23.875 174.5 l
21.113577 174.5 18.875 176.73857 18.875 179.5 c
18.875 197 l
18.875 199.76143 21.113577 202 23.875 202 c
h
23.875 202 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -888 1052 cm
911.875 850 m
979.875 850 l
982.63641 850 984.875 852.23859 984.875 855 c
984.875 872.5 l
984.875 875.26141 982.63641 877.5 979.875 877.5 c
911.875 877.5 l
909.11359 877.5 906.875 875.26141 906.875 872.5 c
906.875 855 l
906.875 852.23859 909.11359 850 911.875 850 c
h
911.875 850 m
S
/Cs1 SC
0 sc
0 i
912.70703 868.75 m
(&'\(!#\)$*+)[ 11.664062 8.335938 6.835938 11.500000 3.835938 4.000000 7.000000 8.500000 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
220 202 m
288 202 l
290.76141 202 293 199.76143 293 197 c
293 179.5 l
293 176.73857 290.76141 174.5 288 174.5 c
220 174.5 l
217.23857 174.5 215 176.73857 215 179.5 c
215 197 l
215 199.76143 217.23857 202 220 202 c
h
220 202 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -888 1052 cm
1108 850 m
1176 850 l
1178.7615 850 1181 852.23859 1181 855 c
1181 872.5 l
1181 875.26141 1178.7615 877.5 1176 877.5 c
1108 877.5 l
1105.2385 877.5 1103 875.26141 1103 872.5 c
1103 855 l
1103 852.23859 1105.2385 850 1108 850 c
h
1108 850 m
S
/Cs1 SC
0 sc
0 i
1109.9688 868.75 m
(&'\(,%-./)[ 11.664062 8.335938 6.835938 9.000000 5.531250 7.695312 7.664062 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
214 119.5 m
294 119.5 l
296.76141 119.5 299 117.26142 299 114.5 c
299 97 l
299 94.238579 296.76141 92 294 92 c
214 92 l
211.23857 92 209 94.238579 209 97 c
209 114.5 l
209 117.26142 211.23857 119.5 214 119.5 c
h
214 119.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -888 1052 cm
1102 932.5 m
1182 932.5 l
1184.7615 932.5 1187 934.73859 1187 937.5 c
1187 955 l
1187 957.76141 1184.7615 960 1182 960 c
1102 960 l
1099.2385 960 1097 957.76141 1097 955 c
1097 937.5 l
1097 934.73859 1099.2385 932.5 1102 932.5 c
h
1102 932.5 m
S
/Cs1 SC
0 sc
0 i
1104.1211 951.25 m
(&'\(0*1-2$%)[ 11.664062 8.335938 6.835938 5.664062 8.054688 7.031250 8.000000 7.335938 7.000000 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
204.75 37 m
303.25 37 l
306.01141 37 308.25 34.761425 308.25 32 c
308.25 14.5 l
308.25 11.738576 306.01141 9.5 303.25 9.5 c
204.75 9.5 l
201.98857 9.5 199.75 11.738576 199.75 14.5 c
199.75 32 l
199.75 34.761425 201.98857 37 204.75 37 c
h
204.75 37 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -888 1052 cm
1092.75 1015 m
1191.25 1015 l
1194.0115 1015 1196.25 1017.2386 1196.25 1020 c
1196.25 1037.5 l
1196.25 1040.2615 1194.0115 1042.5 1191.25 1042.5 c
1092.75 1042.5 l
1089.9885 1042.5 1087.75 1040.2615 1087.75 1037.5 c
1087.75 1020 l
1087.75 1017.2386 1089.9885 1015 1092.75 1015 c
h
1092.75 1015 m
S
/Cs1 SC
0 sc
0 i
1094.1641 1033.75 m
(&'\(!-**$\(+-%)[ 11.664062 8.335938 6.835938 11.500000 8.000000 8.500000 8.500000 7.000000 6.835938 4.664062 8.000000 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
13.75 37 m
102 37 l
104.76142 37 107 34.761425 107 32 c
107 14.5 l
107 11.738576 104.76142 9.5 102 9.5 c
13.75 9.5 l
10.988576 9.5 8.75 11.738576 8.75 14.5 c
8.75 32 l
8.75 34.761425 10.988576 37 13.75 37 c
h
13.75 37 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -888 1052 cm
901.75 1015 m
990 1015 l
992.76141 1015 995 1017.2386 995 1020 c
995 1037.5 l
995 1040.2615 992.76141 1042.5 990 1042.5 c
901.75 1042.5 l
898.98859 1042.5 896.75 1040.2615 896.75 1037.5 c
896.75 1020 l
896.75 1017.2386 898.98859 1015 901.75 1015 c
h
901.75 1015 m
S
/Cs1 SC
0 sc
0 i
905.52344 1033.75 m
(&'\(,%-+-\(-#)[ 11.664062 8.335938 6.835938 9.000000 5.531250 8.000000 4.664062 8.000000 6.835938 8.000000 0.000000 ] xS
/Cs2 SC
1 0.75 0.75 sc
CM
281.57715 311.20062 m
296.80765 298.80148 296.80765 278.69852 281.57715 266.29938 c
266.34671 253.90018 241.65331 253.90018 226.42287 266.29938 c
211.19235 278.69852 211.19235 298.80148 226.42287 311.20062 c
241.65331 323.59982 266.34671 323.59982 281.57715 311.20062 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -888 1052 cm
1169.5771 740.79938 m
1184.8076 753.19855 1184.8076 773.30145 1169.5771 785.70062 c
1154.3467 798.09979 1129.6533 798.09979 1114.4229 785.70062 c
1099.1924 773.30145 1099.1924 753.19855 1114.4229 740.79938 c
1129.6533 728.40021 1154.3467 728.40021 1169.5771 740.79938 c
S
/Cs1 SC
0 sc
0 i
1116.7852 759.25 m
(&$3-+$)[ 10.929688 7.000000 12.835938 8.000000 4.664062 0.000000 ] xS
1129.25 777.25 m
(4,0)[ 10.835938 9.000000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
945.875 777 m
945.875 840.09998 l
S
0 i
CM
57.875 203.89999 m
60.875 211.89999 l
54.875 211.89999 l
h
57.875 203.89999 m
f
0 J
0 j
1 0 0 -1 -888 1052 cm
945.875 848.09998 m
948.875 840.09998 l
942.875 840.09998 l
h
945.875 848.09998 m
S
1 1 1 sc
CM
30.691 250.28027 m
85.058998 250.28027 l
85.058998 228.28027 l
30.691 228.28027 l
h
30.691 250.28027 m
f
/Cs1 SC
0 sc
1 0 0 -1 -888 1052 cm
/F2.1[ 16 0 0 -16 0 0]sf
923.69098 818.71973 m
(!"#$%&)[ 4.320000 12.560000 8.400000 5.792000 8.128000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1142 795 m
1142 840.09998 l
S
0 i
CM
254 203.89999 m
257 211.89999 l
251 211.89999 l
h
254 203.89999 m
f
0 J
0 j
1 0 0 -1 -888 1052 cm
1142 848.09998 m
1145 840.09998 l
1139 840.09998 l
h
1142 848.09998 m
S
1 1 1 sc
CM
237.32001 241.08788 m
270.67999 241.08788 l
270.67999 219.08788 l
237.32001 219.08788 l
h
237.32001 241.08788 m
f
/Cs1 SC
0 sc
1 0 0 -1 -888 1052 cm
1130.3199 827.91211 m
('\(\)\))[ 6.592000 8.064000 4.352000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
974.625 763.25 m
1093.1 763.25 l
S
0 i
CM
213.09998 288.75 m
205.09998 291.75 l
205.09998 285.75 l
h
213.09998 288.75 m
f
0 J
0 j
1 0 0 -1 -888 1052 cm
1101.1 763.25 m
1093.1 760.25 l
1093.1 766.25 l
h
1101.1 763.25 m
S
1 1 1 sc
CM
132.76031 299.75 m
166.12032 299.75 l
166.12032 277.75 l
132.76031 277.75 l
h
132.76031 299.75 m
f
/Cs1 SC
0 sc
1 0 0 -1 -888 1052 cm
1025.7604 769.25 m
('\(\)\))[ 6.592000 8.064000 4.352000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1142 877.5 m
1142 922.59998 l
S
0 i
CM
254 121.4 m
257 129.39999 l
251 129.39999 l
h
254 121.4 m
f
0 J
0 j
1 0 0 -1 -888 1052 cm
1142 930.59998 m
1145 922.59998 l
1139 922.59998 l
h
1142 930.59998 m
S
1 1 1 sc
CM
237.32001 158.58788 m
270.67999 158.58788 l
270.67999 136.58788 l
237.32001 136.58788 l
h
237.32001 158.58788 m
f
/Cs1 SC
0 sc
1 0 0 -1 -888 1052 cm
1130.3199 910.41211 m
('\(\)\))[ 6.592000 8.064000 4.352000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1142 960 m
1142 1005.1 l
S
0 i
CM
254 38.900002 m
257 46.900002 l
251 46.900002 l
h
254 38.900002 m
f
0 J
0 j
1 0 0 -1 -888 1052 cm
1142 1013.1 m
1145 1005.1 l
1139 1005.1 l
h
1142 1013.1 m
S
1 1 1 sc
CM
237.32001 76.087883 m
270.67999 76.087883 l
270.67999 54.087883 l
237.32001 54.087883 l
h
237.32001 76.087883 m
f
/Cs1 SC
0 sc
1 0 0 -1 -888 1052 cm
1130.3199 992.91211 m
('\(\)\))[ 6.592000 8.064000 4.352000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1087.75 1028.75 m
1004.9 1028.75 l
S
0 i
CM
108.9 23.25 m
116.9 20.25 l
116.9 26.25 l
h
108.9 23.25 m
f
0 J
0 j
1 0 0 -1 -888 1052 cm
996.90002 1028.75 m
1004.9 1031.75 l
1004.9 1025.75 l
h
996.90002 1028.75 m
S
1 1 1 sc
CM
126.74238 34.25 m
181.99039 34.25 l
181.99039 12.25 l
126.74238 12.25 l
h
126.74238 34.25 m
f
/Cs1 SC
0 sc
1 0 0 -1 -888 1052 cm
1019.7424 1034.75 m
(*+'%,*)[ 6.896000 8.512000 6.592000 8.128000 8.224000 0.000000 ] xS
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
659.125 302.5 m
706.625 302.5 l
709.38641 302.5 711.625 300.26141 711.625 297.5 c
711.625 280 l
711.625 277.23859 709.38641 275 706.625 275 c
659.125 275 l
656.36359 275 654.125 277.23859 654.125 280 c
654.125 297.5 l
654.125 300.26141 656.36359 302.5 659.125 302.5 c
h
659.125 302.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -888 1052 cm
1547.125 749.5 m
1594.625 749.5 l
1597.3865 749.5 1599.625 751.73859 1599.625 754.5 c
1599.625 772 l
1599.625 774.76141 1597.3865 777 1594.625 777 c
1547.125 777 l
1544.3635 777 1542.125 774.76141 1542.125 772 c
1542.125 754.5 l
1542.125 751.73859 1544.3635 749.5 1547.125 749.5 c
h
1547.125 749.5 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
1550.5391 768.25 m
(!"##$$)[ 11.500000 7.500000 3.835938 3.835938 7.000000 0.000000 ] xS
/Cs2 SC
0.75 0.75 1 sc
CM
643.8125 202 m
721.9375 202 l
724.69891 202 726.9375 199.76143 726.9375 197 c
726.9375 179.5 l
726.9375 176.73857 724.69891 174.5 721.9375 174.5 c
643.8125 174.5 l
641.05109 174.5 638.8125 176.73857 638.8125 179.5 c
638.8125 197 l
638.8125 199.76143 641.05109 202 643.8125 202 c
h
643.8125 202 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -888 1052 cm
1531.8125 850 m
1609.9375 850 l
1612.699 850 1614.9375 852.23859 1614.9375 855 c
1614.9375 872.5 l
1614.9375 875.26141 1612.699 877.5 1609.9375 877.5 c
1531.8125 877.5 l
1529.051 877.5 1526.8125 875.26141 1526.8125 872.5 c
1526.8125 855 l
1526.8125 852.23859 1529.051 850 1531.8125 850 c
h
1531.8125 850 m
S
/Cs1 SC
0 sc
0 i
1536.7734 868.75 m
(&'\(5$%1$%)[ 11.664062 8.335938 6.835938 8.664062 7.000000 5.835938 7.031250 7.000000 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
448.25 202 m
526.375 202 l
529.13641 202 531.375 199.76143 531.375 197 c
531.375 179.5 l
531.375 176.73857 529.13641 174.5 526.375 174.5 c
448.25 174.5 l
445.48859 174.5 443.25 176.73857 443.25 179.5 c
443.25 197 l
443.25 199.76143 445.48859 202 448.25 202 c
h
448.25 202 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -888 1052 cm
1336.25 850 m
1414.375 850 l
1417.1365 850 1419.375 852.23859 1419.375 855 c
1419.375 872.5 l
1419.375 875.26141 1417.1365 877.5 1414.375 877.5 c
1336.25 877.5 l
1333.4885 877.5 1331.25 875.26141 1331.25 872.5 c
1331.25 855 l
1331.25 852.23859 1333.4885 850 1336.25 850 c
h
1336.25 850 m
S
/Cs1 SC
0 sc
0 i
1337.4336 868.75 m
(&'\(0*1-2$%)[ 11.664062 8.335938 6.835938 5.664062 8.054688 7.031250 8.000000 7.335938 7.000000 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
443.1875 119.5 m
531.4375 119.5 l
534.19891 119.5 536.4375 117.26142 536.4375 114.5 c
536.4375 97 l
536.4375 94.238579 534.19891 92 531.4375 92 c
443.1875 92 l
440.42609 92 438.1875 94.238579 438.1875 97 c
438.1875 114.5 l
438.1875 117.26142 440.42609 119.5 443.1875 119.5 c
h
443.1875 119.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -888 1052 cm
1331.1875 932.5 m
1419.4375 932.5 l
1422.199 932.5 1424.4375 934.73859 1424.4375 937.5 c
1424.4375 955 l
1424.4375 957.76141 1422.199 960 1419.4375 960 c
1331.1875 960 l
1328.426 960 1326.1875 957.76141 1326.1875 955 c
1326.1875 937.5 l
1326.1875 934.73859 1328.426 932.5 1331.1875 932.5 c
h
1331.1875 932.5 m
S
/Cs1 SC
0 sc
0 i
1331.457 951.25 m
(&'\(,%-\($66-%)[ 11.664062 8.335938 6.835938 9.000000 5.531250 8.000000 6.835938 7.000000 5.335938 5.335938 8.000000 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
438.0625 37 m
536.5625 37 l
539.32391 37 541.5625 34.761425 541.5625 32 c
541.5625 14.5 l
541.5625 11.738576 539.32391 9.5 536.5625 9.5 c
438.0625 9.5 l
435.30109 9.5 433.0625 11.738576 433.0625 14.5 c
433.0625 32 l
433.0625 34.761425 435.30109 37 438.0625 37 c
h
438.0625 37 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -888 1052 cm
1326.0625 1015 m
1424.5625 1015 l
1427.324 1015 1429.5625 1017.2386 1429.5625 1020 c
1429.5625 1037.5 l
1429.5625 1040.2615 1427.324 1042.5 1424.5625 1042.5 c
1326.0625 1042.5 l
1323.301 1042.5 1321.0625 1040.2615 1321.0625 1037.5 c
1321.0625 1020 l
1321.0625 1017.2386 1323.301 1015 1326.0625 1015 c
h
1326.0625 1015 m
S
/Cs1 SC
0 sc
0 i
1332.6445 1033.75 m
(&'\(4\(\($'+-%)[ 11.664062 8.335938 6.835938 10.835938 6.835938 6.835938 7.156250 8.335938 4.664062 8.000000 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
638.75 37 m
727 37 l
729.76141 37 732 34.761425 732 32 c
732 14.5 l
732 11.738576 729.76141 9.5 727 9.5 c
638.75 9.5 l
635.98859 9.5 633.75 11.738576 633.75 14.5 c
633.75 32 l
633.75 34.761425 635.98859 37 638.75 37 c
h
638.75 37 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -888 1052 cm
1526.75 1015 m
1615 1015 l
1617.7615 1015 1620 1017.2386 1620 1020 c
1620 1037.5 l
1620 1040.2615 1617.7615 1042.5 1615 1042.5 c
1526.75 1042.5 l
1523.9885 1042.5 1521.75 1040.2615 1521.75 1037.5 c
1521.75 1020 l
1521.75 1017.2386 1523.9885 1015 1526.75 1015 c
h
1526.75 1015 m
S
/Cs1 SC
0 sc
0 i
1530.5234 1033.75 m
(&'\(,%-+-\(-#)[ 11.664062 8.335938 6.835938 9.000000 5.531250 8.000000 4.664062 8.000000 6.835938 8.000000 0.000000 ] xS
/Cs2 SC
1 0.75 0.75 sc
CM
514.88965 311.20062 m
530.12018 298.80148 530.12018 278.69852 514.88965 266.29938 c
499.65921 253.90018 474.96579 253.90018 459.73535 266.29938 c
444.50485 278.69852 444.50485 298.80148 459.73535 311.20062 c
474.96579 323.59982 499.65921 323.59982 514.88965 311.20062 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -888 1052 cm
1402.8896 740.79938 m
1418.1201 753.19855 1418.1201 773.30145 1402.8896 785.70062 c
1387.6592 798.09979 1362.9658 798.09979 1347.7354 785.70062 c
1332.5049 773.30145 1332.5049 753.19855 1347.7354 740.79938 c
1362.9658 728.40021 1387.6592 728.40021 1402.8896 740.79938 c
S
/Cs1 SC
0 sc
0 i
1350.0977 759.25 m
(&$3-+$)[ 10.929688 7.000000 12.835938 8.000000 4.664062 0.000000 ] xS
1362.5625 777.25 m
(4,0)[ 10.835938 9.000000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1570.875 777 m
1570.875 840.09998 l
S
0 i
CM
682.875 203.89999 m
685.875 211.89999 l
679.875 211.89999 l
h
682.875 203.89999 m
f
0 J
0 j
1 0 0 -1 -888 1052 cm
1570.875 848.09998 m
1573.875 840.09998 l
1567.875 840.09998 l
h
1570.875 848.09998 m
S
1 1 1 sc
CM
657.02698 250.28027 m
708.72302 250.28027 l
708.72302 228.28027 l
657.02698 228.28027 l
h
657.02698 250.28027 m
f
/Cs1 SC
0 sc
1 0 0 -1 -888 1052 cm
/F2.1[ 16 0 0 -16 0 0]sf
1550.027 818.71973 m
(*-#%$&)[ 6.896000 7.312000 8.400000 8.128000 5.792000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1375.3125 850 m
1375.3125 804.90002 l
S
0 i
CM
487.3125 255.09999 m
484.3125 247.09999 l
490.3125 247.09999 l
h
487.3125 255.09999 m
f
0 J
0 j
1 0 0 -1 -888 1052 cm
1375.3125 796.90002 m
1372.3125 804.90002 l
1378.3125 804.90002 l
h
1375.3125 796.90002 m
S
1 1 1 sc
CM
470.63251 239.91211 m
503.99249 239.91211 l
503.99249 217.91211 l
470.63251 217.91211 l
h
470.63251 239.91211 m
f
/Cs1 SC
0 sc
1 0 0 -1 -888 1052 cm
1363.6324 829.08789 m
('\(\)\))[ 6.592000 8.064000 4.352000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1532.225 763.25 m
1414.3125 763.25 l
S
0 i
CM
652.22498 288.75 m
644.22498 291.75 l
644.22498 285.75 l
h
652.22498 288.75 m
f
0 J
0 j
1 0 0 -1 -888 1052 cm
1540.225 763.25 m
1532.225 760.25 l
1532.225 766.25 l
h
1540.225 763.25 m
S
1 1 1 sc
CM
574.90491 299.75 m
608.26489 299.75 l
608.26489 277.75 l
574.90491 277.75 l
h
574.90491 299.75 m
f
/Cs1 SC
0 sc
1 0 0 -1 -888 1052 cm
1467.9049 769.25 m
('\(\)\))[ 6.592000 8.064000 4.352000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1375.3125 932.5 m
1375.3125 887.40002 l
S
0 i
CM
487.3125 172.60001 m
484.3125 164.60001 l
490.3125 164.60001 l
h
487.3125 172.60001 m
f
0 J
0 j
1 0 0 -1 -888 1052 cm
1375.3125 879.40002 m
1372.3125 887.40002 l
1378.3125 887.40002 l
h
1375.3125 879.40002 m
S
1 1 1 sc
CM
470.63251 157.41212 m
503.99249 157.41212 l
503.99249 135.41212 l
470.63251 135.41212 l
h
470.63251 157.41212 m
f
/Cs1 SC
0 sc
1 0 0 -1 -888 1052 cm
1363.6324 911.58789 m
('\(\)\))[ 6.592000 8.064000 4.352000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1375.3125 1015 m
1375.3125 969.90002 l
S
0 i
CM
487.3125 90.099998 m
484.3125 82.099998 l
490.3125 82.099998 l
h
487.3125 90.099998 m
f
0 J
0 j
1 0 0 -1 -888 1052 cm
1375.3125 961.90002 m
1372.3125 969.90002 l
1378.3125 969.90002 l
h
1375.3125 961.90002 m
S
1 1 1 sc
CM
470.63251 74.912117 m
503.99249 74.912117 l
503.99249 52.912117 l
470.63251 52.912117 l
h
470.63251 74.912117 m
f
/Cs1 SC
0 sc
1 0 0 -1 -888 1052 cm
1363.6324 994.08789 m
('\(\)\))[ 6.592000 8.064000 4.352000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1429.5625 1028.75 m
1511.85 1028.75 l
S
0 i
CM
631.84998 23.25 m
623.84998 26.25 l
623.84998 20.25 l
h
631.84998 23.25 m
f
0 J
0 j
1 0 0 -1 -888 1052 cm
1519.85 1028.75 m
1511.85 1025.75 l
1511.85 1031.75 l
h
1519.85 1028.75 m
S
1 1 1 sc
CM
559.19086 34.25 m
614.15088 34.25 l
614.15088 12.25 l
559.19086 12.25 l
h
559.19086 34.25 m
f
/Cs1 SC
0 sc
1 0 0 -1 -888 1052 cm
1452.1909 1034.75 m
(,*'%,*)[ 8.224000 6.896000 6.592000 8.128000 8.224000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1196.25 1029 m
1207.25 1021.5 l
1207.25 1025.25 l
1309.5 1025.25 l
1309.5 1021.5 l
1320.5 1029 l
1309.5 1036.5 l
1309.5 1032.75 l
1207.25 1032.75 l
1207.25 1036.5 l
h
1196.25 1029 m
S
/Cs1 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
1217.5703 1012.5 m
(&'\(!7"**$#)[ 11.664062 8.335938 6.835938 11.500000 8.500000 7.500000 8.500000 8.500000 7.000000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
